{"version":3,"sources":["actions/index.js","app/routes/todo-calendar/TodoCalendar.js","components/Task.js","components/TaskList.js","components/NoTask.js","app/routes/todolist/TodoList.js","components/Header.js","components/AddTodo.js","components/Form.js","components/Footer.js","app/index.js","reducers/index.js","index.js"],"names":["TOGGLE_ADD_MODE","ADD_TASK","TOGGLE_EDIT_MODE","EDIT_TASK","TOGGLE_DELETE_MODE","DELETE_TASK","GET_DATE","MOVE_PAGE","toggleAddMode","type","nextId","toggleEditMode","index","toggleDeleteMode","deleteTask","id","movePage","TodoCalendar","dispatch","useDispatch","useSelector","state","todoList","selected","normal","useState","Date","value","onChange","className","locale","onClickDay","moment","format","date","day","getDate","Task","todo","deleteMode","changeAddMode","changeEditMode","onClickDelete","done","setDone","onClickTask","prev","onClick","name","checked","e","target","join","text","stopPropagation","onChangeEditMode","TaskList","selectedDate","map","NoTask","TodoList","delete","todayList","setTodayList","useEffect","length","filter","withRouter","props","addInput","location","pathname","history","push","toUpperCase","changeDeleteMode","onClickMove","getTodayList","to","style","fontWeight","Form","edit","onClickAddTask","onClickEditTask","editMode","setTodo","onSubmit","preventDefault","alert","placeholder","maxLength","Footer","page","task","payload","addTask","editTask","App","exact","path","component","initial","reducer","action","concat","newList","store","createStore","composeWithDevTools","console","log","getState","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8de6288d.chunk.js","sourcesContent":["export const TOGGLE_ADD_MODE = 'TOGGLE_ADD_MODE';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const TOGGLE_CHECK_TASK = 'TOGGLE_CHECK_TASK';\r\n\r\nexport const TOGGLE_EDIT_MODE = 'TOGGLE_EDIT_MODE';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const TOGGLE_DELETE_MODE = 'TOGGLE_DELETE_MODE';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const GET_DATE = 'GET_DATE';\r\nexport const MOVE_PAGE = 'MOVE_PAGE';\r\n\r\n// TASK 추가 FORM 토글\r\nexport const toggleAddMode = () => {\r\n  return {\r\n    type: TOGGLE_ADD_MODE,\r\n  };\r\n};\r\n\r\n// 할일 목록 리스트 순서\r\nlet nextId = 0;\r\nexport const addTask = (text, date) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: {\r\n      id: nextId++,\r\n      text,\r\n      date,\r\n      done: false,\r\n    }\r\n  };\r\n};\r\n\r\n// 할 일 체크\r\nexport const toggleCheckTask = (id) => {\r\n  return {\r\n    type: TOGGLE_CHECK_TASK,\r\n    id,\r\n  }\r\n}\r\n\r\n// TASK 수정 아이콘 클릭\r\nexport const toggleEditMode = index => {\r\n  return {\r\n    type: TOGGLE_EDIT_MODE,\r\n    index,\r\n  }\r\n}\r\n\r\n// TASK 수정 완료\r\nexport const editTask = (text, index) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    text,\r\n    index,\r\n  }\r\n}\r\n\r\n// TASK 모드 토글\r\nexport const toggleDeleteMode = () => {\r\n  return {\r\n    type: TOGGLE_DELETE_MODE,\r\n  }\r\n}\r\n\r\n// TASK 삭제\r\nexport const deleteTask = id => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    id,\r\n  }\r\n}\r\n\r\n// 달력의 클릭한 DATE 가져오기\r\nexport const getDate = (normal, date, day) => {\r\n  return {\r\n    type: GET_DATE,\r\n    normal,\r\n    date,\r\n    day,\r\n  }\r\n}\r\n\r\n// 페이지 이동\r\nexport const movePage = () => {\r\n  return {\r\n    type: MOVE_PAGE,\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getDate } from '../../../actions/index'\r\n\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction TodoCalendar() {\r\n\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector(state => state.todoList);\r\n  const selectedDate = useSelector(state => state.selected.normal);\r\n  const [ value, onChange ] = useState(new Date());\r\n\r\n  const onClickDay = value => {\r\n    const normal = moment(value).format('YYYY.MM.DD');\r\n    const date = moment(value).format('MMM Do');\r\n    const day = moment(value).format('dddd');\r\n\r\n    dispatch(getDate(normal, date, day));\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-calendar\">\r\n      <Calendar \r\n        onChange={onChange}\r\n        value={value}\r\n        locale=\"en-us\"\r\n        onClickDay={onClickDay}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoCalendar\r\n","import React, { useState } from 'react';\r\n\r\nfunction Task({ todo, index, todoList, deleteMode, changeAddMode, changeEditMode, onClickDelete }) {\r\n  \r\n  // 체크 상태\r\n  const [ done, setDone ] = useState(false);\r\n\r\n  // task 클릭하면 done or delete\r\n  const onClickTask = id => {\r\n    if(deleteMode) {\r\n      onClickDelete(id);\r\n    } else {\r\n      setDone(prev => !prev);\r\n    }\r\n  }\r\n\r\n  const checkedHandler = e => {\r\n    setDone(e.target.checked)\r\n  }\r\n\r\n  // editmode -> 수정할 대상 가져오기, 입력 폼 활성화\r\n  const onChangeEditMode = (e, index) => {\r\n    e.stopPropagation();\r\n    \r\n    changeEditMode(index);\r\n    changeAddMode();\r\n  }\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <li className=\"task-list\" onClick={() => onClickTask(todo.id)}>\r\n        {deleteMode ?\r\n          <i className=\"icon-cancel\" \r\n            onClick={() => onClickTask(todo.id)}\r\n          /> :\r\n          <div>\r\n            <input\r\n              className=\"check-box\"\r\n              type=\"checkbox\"\r\n              name=\"check\"\r\n              checked={done}\r\n              value={todo.id}\r\n              onChange={checkedHandler}\r\n            />\r\n            <i className=\"icon-check\" />\r\n          </div>\r\n        }\r\n        <span className={[ 'todo-text', done && 'done'].join(' ')}>\r\n          {todo.text}\r\n        </span>\r\n        <span className=\"date\">{todo.date}</span>\r\n        <i className=\"icon-edit\" onClick={e => onChangeEditMode(e, index)}/>  \r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, { useEffect } from 'react';\r\nimport Task from './Task';\r\n\r\nfunction TaskList({ todoList, deleteMode, selectedDate, changeAddMode, changeEditMode, onClickDelete }) {\r\n\r\n  return (\r\n    <div className=\"to-do\">\r\n      <ul>\r\n        {todoList.map((todo, index) => (\r\n          <Task \r\n            key={todo.id} \r\n            todo={todo}\r\n            todoList={todoList}\r\n            index={index}\r\n            deleteMode={deleteMode}\r\n            changeAddMode={changeAddMode}\r\n            changeEditMode={changeEditMode}\r\n            onClickDelete={onClickDelete}\r\n            />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react';\r\n\r\nfunction NoTask() {\r\n  return (\r\n    <div className=\"no-task\">\r\n      <i className=\"icon-smile\" />\r\n      <span>할 일 없음</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoTask\r\n","\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport TaskList from 'components/TaskList';\nimport NoTask from 'components/NoTask';\n\nimport {\n  toggleAddMode,\n  addTask,\n  toggleEditMode,\n  editTask,\n  toggleDeleteMode,\n  deleteTask\n  } from '../../../actions';\n\nfunction TodoList() {\n  const dispatch = useDispatch();\n\n  \n  const todoList = useSelector(state => state.todoList);\n  const deleteMode = useSelector(state => state.delete);\n  const selectedDate = useSelector(state => state.selected.normal);\n  const [ todayList, setTodayList ] = useState([]);\n  \n  // 할일 추가\n  const changeAddMode = () => dispatch(toggleAddMode());\n\n  // 할일 수정\n  const changeEditMode = index => dispatch(toggleEditMode(index));\n\n  // 할일 삭제\n  const changeDeleteMode = () => dispatch(toggleDeleteMode());\n  const onClickDelete = id => dispatch(deleteTask(id));\n\n  // 삭제 모드에서 task가 0이 되면 삭제 모드 종료\n  useEffect(() => {\n    if(deleteMode && todoList.length === 0){\n      changeDeleteMode();\n    }\n  }, [todoList.length]);\n\n  useEffect(() => {\n    if(todoList){\n      setTodayList(todoList.filter(todo => todo.date === selectedDate));\n\n    }\n  }, [todoList])\n\n  return (\n    <div className=\"TodoList\">\n      <div className=\"template\">\n        <div className=\"content\">\n          {todoList && todoList.length > 0 ?\n            <TaskList\n              todoList={todayList}\n              deleteMode={deleteMode}\n              selectedDate={selectedDate}\n              changeAddMode={changeAddMode}\n              changeEditMode={changeEditMode}\n              onClickDelete={onClickDelete}\n            /> :\n            <NoTask />\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;","import React, { useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleAddMode, movePage, toggleDeleteMode } from '../actions/index';\r\n\r\nfunction Header(props) {\r\n  \r\n  const dispatch = useDispatch();\r\n  const selected = useSelector(state => state.selected);\r\n  const addInput = useSelector(state => state.addInput);\r\n  const [ title, setTitle ] = useState(false);\r\n  const todoList = useSelector(state => state.todoList);\r\n\r\n  const onClickDelete = () => {\r\n    dispatch(toggleDeleteMode());\r\n  }\r\n\r\n  const onClickGoBack = () => {\r\n    props.history.push('/');\r\n    dispatch(toggleAddMode());\r\n    dispatch(movePage());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.location.pathname === \"/todolist\" ?\r\n        <div className=\"selected\">\r\n          <i className=\"icon-chevron-left\" onClick={onClickGoBack}/>\r\n          <span className=\"selected-day\">{selected.day.toUpperCase()}, </span>\r\n          <span className=\"selected-date\">{selected.date}</span>\r\n          {todoList && todoList.length > 0 &&\r\n            <i className=\"icon-delete\" onClick={onClickDelete} />}\r\n        </div> :\r\n        <h1>TODO TODO</h1> \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nfunction AddTodo({ todoList, deleteMode, changeDeleteMode, onClickMove, history, selectedDate, getTodayList }) {\r\n  \r\n  const onClickAddBtn = () => {\r\n    onClickMove();\r\n    //changeAddMode();\r\n    \r\n    if(deleteMode) {\r\n      changeDeleteMode();\r\n    }\r\n  }\r\n\r\n  const onClickTasks = () => {\r\n    onClickMove();\r\n    history.push('/todolist')\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todo\">\r\n      <Link to=\"/todolist\">\r\n        <div className='task'>\r\n        <span style={{ fontWeight: 'bold' }}>{todoList ? todoList.filter(todo => todo.date === selectedDate).length : \"0\"}</span>\r\n          <span onClick={onClickTasks}> TASKS </span>\r\n          <i className=\"icon-menu\" />\r\n        </div>\r\n      </Link>\r\n      <div className=\"delete\">\r\n      </div>\r\n      <Link to=\"/todolist\">\r\n        <div className='add-new' onClick={onClickAddBtn}>\r\n          ADDNEW\r\n          <i className=\"icon-add\"/>\r\n        </div> \r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(AddTodo);\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction Form({ todoList, edit, date, changeAddMode, onClickAddTask, changeEditMode, onClickEditTask }) {\r\n  const [ todo, setTodo ] = useState(edit && edit.editMode ? todoList[edit.index].text : \"\");\r\n\r\n  const inputChangeHandler = e => {\r\n    setTodo(e.target.value);\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    \r\n    if(todo == \"\") { // 할일 입력값이 없을 때,\r\n      alert('할일을 입력해주세요')\r\n    } else if (edit && edit.editMode) { // editMode일 때,\r\n      changeAddMode();\r\n      onClickEditTask(todo, edit.index);\r\n    } else { // 제출\r\n      onClickAddTask(todo, date.normal);\r\n      setTodo(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='form-wrap'>\r\n        <input \r\n          type=\"text\"\r\n          className=\"todo-input\"\r\n          value={todo}\r\n          onChange={inputChangeHandler}\r\n          placeholder=\"할 일을 입력해주세요.\"\r\n          maxLength=\"50\"\r\n          />\r\n        <button className=\"add-btn\" type=\"submit\">\r\n          {edit && edit.editMode ? \"OK\" : \"ADD\"}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { \r\n  toggleAddMode,\r\n  addTask,\r\n  toggleEditMode,\r\n  editTask,\r\n  toggleDeleteMode,\r\n  deleteTask,\r\n  movePage,\r\n} from '../actions/index';\r\n\r\nimport AddTodo from './AddTodo';\r\nimport Form from './Form';\r\n\r\nfunction Footer() {\r\n\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector(state => state.todoList);\r\n  const edit = useSelector(state => state.edit);\r\n  const deleteMode = useSelector(state => state.delete);\r\n  const date = useSelector(state => state.selected)\r\n  const page = useSelector(state => state.page);\r\n  const selectedDate = useSelector(state => state.selected.normal);\r\n\r\n  // 할일 추가\r\n  const changeAddMode = () => dispatch(toggleAddMode());\r\n  const onClickAddTask = (task, date) => dispatch(addTask(task, date));\r\n\r\n  // 할일 수정\r\n  const changeEditMode = index => dispatch(toggleEditMode(index));\r\n  const onClickEditTask = (todo, index) => dispatch(editTask(todo, index))\r\n\r\n  // 할일 삭제\r\n  const changeDeleteMode = () => dispatch(toggleDeleteMode());\r\n  const onClickDelete = id => dispatch(deleteTask(id));\r\n\r\n  // page 이동\r\n  const onClickMove = () => dispatch(movePage());\r\n\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      {page === 'calendar' ?\r\n        <AddTodo\r\n          todoList={todoList}\r\n          deleteMode={deleteMode}\r\n          changeAddMode={changeAddMode}\r\n          changeDeleteMode={changeDeleteMode}\r\n          onClickDelete={onClickDelete}\r\n          onClickMove={onClickMove}\r\n          selectedDate={selectedDate}\r\n        /> :\r\n        <Form \r\n          todoList={todoList}\r\n          edit={edit}\r\n          date={date}\r\n          changeAddMode={changeAddMode}\r\n          onClickAddTask={onClickAddTask}\r\n          changeEditMode={changeEditMode}\r\n          onClickEditTask={onClickEditTask}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport TodoCalendar from './routes/todo-calendar/TodoCalendar';\r\nimport TodoList from './routes/todolist/TodoList';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport '../styles/app.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"app-main-content\">\r\n        <Switch>\r\n          <Route exact path= \"/\" component={TodoCalendar} />\r\n          <Route exact path=\"/todolist\" component={TodoList} />\r\n        </Switch>\r\n      </div>\r\n\r\n      <div className=\"app-footer\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { \r\n  TOGGLE_ADD_MODE,\r\n  ADD_TASK,\r\n  TOGGLE_EDIT_MODE,\r\n  EDIT_TASK,\r\n  TOGGLE_DELETE_MODE,\r\n  DELETE_TASK,\r\n  GET_DATE,\r\n  MOVE_PAGE,\r\n} from '../actions/index';\r\nimport moment from 'moment';\r\n\r\nconst initial = {\r\n  addInput: false,\r\n  todoList: [],\r\n  delete: false,\r\n  selected: {\r\n    normal: moment().format('YYYY.MM.DD'),\r\n    date: moment().format('MMM Do'),\r\n    day: moment().format('dddd')\r\n  },\r\n  page: 'calendar',\r\n}\r\n\r\nconst reducer = (state = initial, action) => {\r\n  switch(action.type) {\r\n    case TOGGLE_ADD_MODE: {\r\n      return {\r\n        ...state,\r\n        addInput: !state.addInput,\r\n      }\r\n    }\r\n    case ADD_TASK: {\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.concat(action.payload),\r\n      }\r\n    }\r\n    case TOGGLE_EDIT_MODE: {\r\n      return {\r\n        ...state,\r\n        edit: {\r\n          editMode: !state.editMode,\r\n          index: action.index\r\n        }\r\n      }\r\n    }\r\n    case EDIT_TASK: {\r\n      state.todoList[action.index].text = action.text;\r\n      return {\r\n        ...state,\r\n        edit: {\r\n          editMode: false,\r\n        }\r\n      }\r\n    }\r\n    case TOGGLE_DELETE_MODE: {\r\n      return {\r\n        ...state,\r\n        delete: !state.delete\r\n      }\r\n    }\r\n    case DELETE_TASK: {\r\n      const newList = state.todoList.filter(\r\n        todo => \r\n          todo.id !== action.id\r\n      )\r\n      return {\r\n        ...state,\r\n        todoList: newList\r\n      }\r\n    }\r\n    case GET_DATE: {\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          normal: action.normal,\r\n          date: action.date,\r\n          day: action.day\r\n        }\r\n      }\r\n    }\r\n    case MOVE_PAGE: {\r\n      return {\r\n        ...state,\r\n        page: state.page === 'todoList' ? 'calendar' : 'todoList'\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/index';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducer, composeWithDevTools());\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}