{"version":3,"sources":["actions/index.js","app/routes/todo-calendar/TodoCalendar.js","components/Task.js","components/TaskList.js","components/NoTask.js","app/routes/todolist/TodoList.js","components/Header.js","components/AddTodo.js","components/Form.js","components/Footer.js","app/index.js","reducers/index.js","index.js"],"names":["TOGGLE_ADD_MODE","ADD_TASK","TOGGLE_EDIT_MODE","EDIT_TASK","TOGGLE_DELETE_MODE","DELETE_TASK","GET_DATE","toggleAddMode","type","nextId","addTask","text","date","payload","id","toggleEditMode","index","editTask","toggleDeleteMode","deleteTask","TodoCalendar","dispatch","useDispatch","useState","Date","value","onChange","locale","onClickDay","moment","format","day","getDate","Task","todo","deleteMode","changeAddMode","changeEditMode","onClickDelete","done","setDone","onClickTask","prev","className","onClick","name","checked","e","target","join","stopPropagation","onChangeEditMode","TaskList","todoList","map","NoTask","TodoList","useSelector","state","addInput","delete","edit","length","withRouter","props","selected","title","setTitle","useEffect","history","push","console","log","toUpperCase","AddTodo","changeDeleteMode","style","fontWeight","to","TODAY","Form","onClickAddTask","onClickEditTask","editMode","setTodo","onSubmit","preventDefault","alert","placeholder","maxLength","Footer","task","App","exact","path","component","initial","reducer","action","concat","newList","filter","store","createStore","composeWithDevTools","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbb8ae90.chunk.js","sourcesContent":["export const TOGGLE_ADD_MODE = 'TOGGLE_ADD_MODE';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const TOGGLE_EDIT_MODE = 'TOGGLE_EDIT_MODE';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const TOGGLE_DELETE_MODE = 'TOGGLE_DELETE_MODE';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const GET_DATE = 'GET_DATE';\r\n\r\n// TASK 추가 FORM 토글\r\nexport const toggleAddMode = () => {\r\n  return {\r\n    type: TOGGLE_ADD_MODE,\r\n  };\r\n};\r\n\r\n// 할일 목록 리스트 순서\r\nlet nextId = 0;\r\nexport const addTask = (text, date) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: {\r\n      id: nextId++,\r\n      text,\r\n      date,\r\n    }\r\n  };\r\n};\r\n\r\n// TASK 수정 아이콘 클릭\r\nexport const toggleEditMode = index => {\r\n  return {\r\n    type: TOGGLE_EDIT_MODE,\r\n    index,\r\n  }\r\n}\r\n\r\n// TASK 수정 완료\r\nexport const editTask = (text, index) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    text,\r\n    index,\r\n  }\r\n}\r\n\r\n// TASK 모드 토글\r\nexport const toggleDeleteMode = () => {\r\n  return {\r\n    type: TOGGLE_DELETE_MODE,\r\n  }\r\n}\r\n\r\n// TASK 삭제\r\nexport const deleteTask = id => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    id,\r\n  }\r\n}\r\n\r\n// 달력의 클릭한 DATE 가져오기\r\nexport const getDate = (date, day) => {\r\n  return {\r\n    type: GET_DATE,\r\n    date,\r\n    day,\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getDate } from '../../../actions/index'\r\n\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction TodoCalendar() {\r\n\r\n  const dispatch = useDispatch();\r\n  const [ value, onChange ] = useState(new Date());\r\n\r\n  const onClickDay = value => {\r\n    const date = moment(value).format('MMM Do');\r\n    const day = moment(value).format('dddd');\r\n    dispatch(getDate(date, day));\r\n  }\r\n\r\n  return (\r\n    <Calendar \r\n      onChange={onChange}\r\n      value={value}\r\n      locale=\"en-us\"\r\n      onClickDay={onClickDay}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TodoCalendar\r\n","import React, { useState } from 'react';\r\n\r\nfunction Task({ todo, index, deleteMode, changeAddMode, changeEditMode, onClickDelete }) {\r\n  \r\n  // 체크 상태\r\n  const [ done, setDone ] = useState(false);\r\n\r\n  // task 클릭하면 done or delete\r\n  const onClickTask = id => {\r\n    if(deleteMode) {\r\n      onClickDelete(id);\r\n    } else {\r\n      setDone(prev => !prev);\r\n    }\r\n  }\r\n\r\n  const checkedHandler = e => {\r\n    setDone(e.target.checked)\r\n  }\r\n\r\n  // editmode -> 수정할 대상 가져오기, 입력 폼 활성화\r\n  const onChangeEditMode = (e, index) => {\r\n    e.stopPropagation();\r\n    \r\n    changeEditMode(index);\r\n    changeAddMode();\r\n  }\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <li className=\"task-list\" onClick={() => onClickTask(todo.id)}>\r\n        {deleteMode ?\r\n          <i className=\"icon-cancel\" \r\n            onClick={() => onClickTask(todo.id)}\r\n          /> :\r\n          <div>\r\n            <input\r\n              className=\"check-box\"\r\n              type=\"checkbox\"\r\n              name=\"check\"\r\n              checked={done}\r\n              value={todo.id}\r\n              onChange={checkedHandler}\r\n            />\r\n            <i className=\"icon-check\" />\r\n          </div>\r\n        }\r\n        <span className={[ 'todo-text', done && 'done'].join(' ')}>\r\n          {todo.text}\r\n        </span>\r\n        <span className=\"date\">{todo.date}</span>\r\n        <i className=\"icon-edit\" onClick={e => onChangeEditMode(e, index)}/>  \r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\nfunction TaskList({ todoList, deleteMode, changeAddMode, changeEditMode, onClickDelete }) {\r\n\r\n  return (\r\n    <div className=\"to-do\">\r\n      <ul>\r\n        {todoList.map((todo, index) => (\r\n          <Task \r\n            key={todo.id} \r\n            todo={todo} \r\n            index={index}\r\n            deleteMode={deleteMode}\r\n            changeAddMode={changeAddMode}\r\n            changeEditMode={changeEditMode}\r\n            onClickDelete={onClickDelete}\r\n            />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react';\r\n\r\nfunction NoTask() {\r\n  return (\r\n    <div className=\"no-task\">\r\n      <i className=\"icon-smile\" />\r\n      <span>할 일 없음</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoTask\r\n","\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport TaskList from '../../../components/TaskList';\nimport NoTask from '../../../components/NoTask';\n\nimport {\n  toggleAddMode,\n  addTask,\n  toggleEditMode,\n  editTask,\n  toggleDeleteMode,\n  deleteTask\n  } from '../../../actions';\n\nfunction TodoList() {\n  const dispatch = useDispatch();\n  const addInput = useSelector(state => state.addInput);\n  const todoList = useSelector(state => state.todoList);\n  const deleteMode = useSelector(state => state.delete);\n  const edit = useSelector(state => state.edit);\n\n  // 할일 추가\n  const changeAddMode = () => dispatch(toggleAddMode());\n  const onClickAddTask = (task, date) => dispatch(addTask(task, date));\n\n  // 할일 수정\n  const changeEditMode = index => dispatch(toggleEditMode(index));\n  const onClickEditTask = (todo, index) => dispatch(editTask(todo, index))\n\n  // 할일 삭제\n  const changeDeleteMode = () => dispatch(toggleDeleteMode());\n  const onClickDelete = id => dispatch(deleteTask(id));\n\n  return (\n    <div className=\"TodoList\">\n      <div className=\"template\">\n        \n        <div className=\"content\">\n          {todoList && todoList.length > 0 ?\n            <TaskList \n              todoList={todoList}\n              deleteMode={deleteMode}\n              changeAddMode={changeAddMode}\n              changeEditMode={changeEditMode}\n              onClickDelete={onClickDelete}\n            /> :\n            <NoTask />\n          }\n        </div>\n\n        {/* <div className=\"footer\">\n          {addInput ?\n            <Form \n              todoList={todoList}\n              edit={edit}\n              changeAddMode={changeAddMode}\n              onClickAddTask={onClickAddTask}\n              changeEditMode={changeEditMode}\n              onClickEditTask={onClickEditTask}\n            /> :\n            <AddTodo\n              todoList={todoList}\n              deleteMode={deleteMode}\n              changeAddMode={changeAddMode}\n              changeDeleteMode={changeDeleteMode}\n              onClickDelete={onClickDelete}\n            />\n          }\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Header(props) {\r\n  \r\n  const selected = useSelector(state => state.selected);\r\n  const addInput = useSelector(state => state.addInput);\r\n  const [ title, setTitle ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(selected && addInput) {\r\n      setTitle(true);\r\n    } else {\r\n      props.history.push('/')\r\n    }\r\n  }, [title, selected, addInput])\r\n\r\n  console.log(title);\r\n  //props.location.pathname === \"/todolist\"\r\n\r\n  return (\r\n    <div>\r\n      {title && selected ?\r\n        <div className=\"selected\">\r\n          <span className=\"selected-day\">{selected.day.toUpperCase()},</span>\r\n          <span className=\"selected-date\">{selected.date}</span>\r\n        </div> :\r\n        <h1>TODO TODO</h1> \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction AddTodo({ todoList, deleteMode, changeAddMode, changeDeleteMode, onClickDelete }) {\r\n  \r\n  const onClickAddBtn = () => {\r\n    changeAddMode();\r\n    \r\n    if(deleteMode) {\r\n      changeDeleteMode();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todo\">\r\n      <div className='task'>\r\n        <span style={{ fontWeight: 'bold' }}>{todoList.length} </span>\r\n        <span>TASKS</span>\r\n        {todoList.length > 0 && \r\n          <i className=\"icon-menu\"></i>\r\n        }\r\n      </div>\r\n      <div className=\"delete\">\r\n        {todoList && todoList.length > 0 &&\r\n          <i className=\"icon-delete\" onClick={changeDeleteMode}/>\r\n        }\r\n        {deleteMode &&\r\n          <div className=\"delete-all\">전체 삭제</div>\r\n        }\r\n      </div>\r\n      <Link to=\"/todolist\">\r\n        <div className='add-new' onClick={onClickAddBtn}>\r\n          ADDNEW\r\n          <i className=\"icon-add\"/>\r\n        </div> \r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\n\r\nconst TODAY = moment().format(\"YYYY.MM.DD\");\r\n\r\nfunction Form({ todoList, edit, changeAddMode, onClickAddTask, changeEditMode, onClickEditTask }) {\r\n  const [ todo, setTodo ] = useState(edit && edit.editMode ? todoList[edit.index].text : \"\");\r\n\r\n  const inputChangeHandler = e => {\r\n    setTodo(e.target.value);\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    \r\n    if(todo == \"\") { // 할일 입력값이 없을 때,\r\n      alert('할일을 입력해주세요')\r\n    } else if (edit && edit.editMode) { // editMode일 때,\r\n      changeAddMode();\r\n      onClickEditTask(todo, edit.index);\r\n    } else { // 제출\r\n      onClickAddTask(todo, TODAY);\r\n      changeAddMode();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='form-wrap'>\r\n        <input \r\n          type=\"text\"\r\n          className=\"todo-input\"\r\n          value={todo}\r\n          onChange={inputChangeHandler}\r\n          placeholder=\"할 일을 입력해주세요.\"\r\n          maxLength=\"50\"\r\n          />\r\n        <button className=\"add-btn\" type=\"submit\">\r\n          {edit && edit.editMode ? \"OK\" : \"ADD\"}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { \r\n  toggleAddMode,\r\n  addTask,\r\n  toggleEditMode,\r\n  editTask,\r\n  toggleDeleteMode,\r\n  deleteTask\r\n} from '../actions/index';\r\nimport moment from 'moment';\r\n\r\nimport AddTodo from './AddTodo';\r\nimport Form from './Form';\r\n\r\nconst TODAY = moment().format(\"YYYY.MM.DD\");\r\n\r\nfunction Footer() {\r\n\r\n  const dispatch = useDispatch();\r\n  const addInput = useSelector(state => state.addInput);\r\n  const todoList = useSelector(state => state.todoList);\r\n  const edit = useSelector(state => state.edit);\r\n  const deleteMode = useSelector(state => state.delete);\r\n  const date = useSelector(state => state.date)\r\n\r\n  // 할일 추가\r\n  const changeAddMode = () => dispatch(toggleAddMode());\r\n  const onClickAddTask = (task, date) => dispatch(addTask(task, date));\r\n\r\n  // 할일 수정\r\n  const changeEditMode = index => dispatch(toggleEditMode(index));\r\n  const onClickEditTask = (todo, index) => dispatch(editTask(todo, index))\r\n\r\n  // 할일 삭제\r\n  const changeDeleteMode = () => dispatch(toggleDeleteMode());\r\n  const onClickDelete = id => dispatch(deleteTask(id));\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      {addInput ?\r\n        <Form \r\n          todoList={todoList}\r\n          edit={edit}\r\n          changeAddMode={changeAddMode}\r\n          onClickAddTask={onClickAddTask}\r\n          changeEditMode={changeEditMode}\r\n          onClickEditTask={onClickEditTask}\r\n        /> :\r\n        <AddTodo\r\n          todoList={todoList}\r\n          deleteMode={deleteMode}\r\n          changeAddMode={changeAddMode}\r\n          changeDeleteMode={changeDeleteMode}\r\n          onClickDelete={onClickDelete}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport TodoCalendar from './routes/todo-calendar/TodoCalendar';\r\nimport TodoList from './routes/todolist/TodoList';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport '../styles/app.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"app-main-content\">\r\n        <Switch>\r\n          <Route exact path= \"/\" component={TodoCalendar} />\r\n          <Route exact path=\"/todolist\" component={TodoList} />\r\n        </Switch>\r\n      </div>\r\n\r\n      <div className=\"app-footer\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { \r\n  TOGGLE_ADD_MODE,\r\n  ADD_TASK,\r\n  TOGGLE_EDIT_MODE,\r\n  EDIT_TASK,\r\n  TOGGLE_DELETE_MODE,\r\n  DELETE_TASK,\r\n  GET_DATE,\r\n} from '../actions/index';\r\n\r\nconst initial = {\r\n  addInput: false,\r\n  todoList: [],\r\n  delete: false,\r\n}\r\n\r\nconst reducer = (state = initial, action) => {\r\n  switch(action.type) {\r\n    case TOGGLE_ADD_MODE: {\r\n      return {\r\n        ...state,\r\n        addInput: !state.addInput,\r\n      }\r\n    }\r\n    case ADD_TASK: {\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.concat(action.payload),\r\n      }\r\n    }\r\n    case TOGGLE_EDIT_MODE: {\r\n      return {\r\n        ...state,\r\n        edit: {\r\n          editMode: !state.editMode,\r\n          index: action.index\r\n        }\r\n      }\r\n    }\r\n    case EDIT_TASK: {\r\n      state.todoList[action.index].text = action.text;\r\n      return {\r\n        ...state,\r\n        edit: {\r\n          editMode: false,\r\n        }\r\n      }\r\n    }\r\n    case TOGGLE_DELETE_MODE: {\r\n      return {\r\n        ...state,\r\n        delete: !state.delete\r\n      }\r\n    }\r\n    case DELETE_TASK: {\r\n      const newList = state.todoList.filter(\r\n        todo => \r\n          todo.id !== action.id\r\n      )\r\n      return {\r\n        ...state,\r\n        todoList: newList\r\n      }\r\n    }\r\n    case GET_DATE: {\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          date: action.date,\r\n          day: action.day\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/index';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducer, composeWithDevTools());\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}